<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>个人博客</title>
  
  <subtitle>真正的强者不光是会干活，还会干好活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-17T10:51:52.289Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhang YanMing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue学习</title>
    <link href="http://yoursite.com/2018/12/06/vue%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/12/06/vue学习/</id>
    <published>2018-12-06T06:41:33.000Z</published>
    <updated>2018-12-17T10:51:52.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue学习总结"><a href="#vue学习总结" class="headerlink" title="vue学习总结"></a>vue学习总结</h1><hr><p><strong>1. Vue模板：</strong><br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;vue代码&lt;/template&gt;</span><br><span class="line">&lt;script&gt;JS代码&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;css样式&lt;/style&gt;   scoped:定义样式只在当前组件内生效</span><br></pre></td></tr></table></figure></p><p>  <strong>生命周期钩子函数：</strong> created 钩子可以用来在一个实例被创建之后执行代码：其他函数如 mounted、updated 和 destroyed。</p><p><strong>2. 模板语法：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">（1）Mustache语法</span><br><span class="line"> 双大括号&#123;&#123;&#125;&#125;进行数据绑定，注意大括号里面只能为单行语句,不能作用在html属性上</span><br><span class="line"></span><br><span class="line">（2）v-html和v-text</span><br><span class="line"> &lt;p v-html=&quot;hello&quot;&gt;&lt;/p&gt;这个可以解析html语法而v-text会直接显示文本，</span><br><span class="line"> &lt;p v-text=&quot;hello&quot;&gt;&lt;/p&gt;</span><br><span class="line"> 在&lt;script&gt;部分的data()函数中声明：hello:&quot;&lt;p&gt;hello vue&lt;/p&gt;&quot;</span><br><span class="line"> </span><br><span class="line">（3）v-bind 动态绑定，在下面函数声明属性，样式动态改变。</span><br><span class="line"> 缩写形式：&lt;a :href=&quot;url&quot;&gt;...&lt;/a&gt;</span><br><span class="line"> &lt;span v-bind:class=&quot;ha&quot; v-bind:id=&quot;bi&quot;&gt;哈哈哈哈&lt;/span&gt;</span><br><span class="line"> data()函数部分：</span><br><span class="line"> ha:&quot;ha1&quot;,</span><br><span class="line"> bi:&quot;bt&quot;,</span><br><span class="line"> style样式部分:</span><br><span class="line"> .ha1&#123;color:blue;&#125;</span><br><span class="line"> #bi&#123;font-size:50px;&#125;</span><br></pre></td></tr></table></figure></p><p><strong>3. 条件渲染：</strong><br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">（1）v-if 和v-else。当v-if属性为ture时才显示，否则显示v-else,则属性为false,</span><br><span class="line"> v-else 元素必须紧跟在带 v-if 或者 v-else-if 的元素的后面，否则它将不会被识别。</span><br><span class="line"> &lt;h1 v-if=&quot;ok&quot;&gt;Yes&lt;/h1&gt;</span><br><span class="line"> &lt;h1 v-else&gt;No&lt;/h1&gt;</span><br><span class="line">（2）v-show</span><br><span class="line"> v-if 也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。</span><br><span class="line"> v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。</span><br></pre></td></tr></table></figure></p><p><strong>4.列表渲染</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">（1）v-for</span><br><span class="line">v-for 指令根据一组数组的选项列表进行渲染。v-for 指令需要使用 item in items 形式的特殊语法，items 是源数据数组并且 item 是数组元素迭代的别名。</span><br><span class="line">v-for 还支持一个可选的第二个参数为当前项的索引。</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&quot;(urse,index) in urses&quot;&gt;&#123;&#123;urse&#125;&#125;-&#123;&#123;index&#125;&#125;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">data()函数部分:</span><br><span class="line">urses:[&quot;aaa&quot;,&quot;bbb&quot;,&quot;ccc&quot;],</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      前段时间学习了vue,今天在这里总结一下，这次只是几个基础部分，还有后续。
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
</feed>
